name: Get Playdate SDK
description: Download & install Playdate SDK.
author: Alex Koz
branding:
  icon: package
  color: yellow
inputs:
  version:
    default: latest
    description: SDK version (ex. `2.0.0` or default `latest`).
    required: false
  # path:
  #   default: default
  #   description: SDK installation path. Optional.
  #   required: false
  # token:
  #   description: GITHUB_TOKEN. Optional.
  #   required: false
outputs:
  root:
    description: Path of SDK root
    value: ${{ steps.output.outputs.root }}
  version:
    description: Version of the installed SDK.
    value: ${{ steps.output.outputs.version }}
runs:
  using: "composite"
  steps:
    - name: download pkg
      if: runner.os == 'macOS'
      shell: bash
      run: |
        curl -L -sS --show-error --fail "https://download.panic.com/playdate_sdk/PlaydateSDK-${{ inputs.version }}.zip" -o sdk.zip
        unzip sdk.zip
        sudo installer -store -pkg "PlaydateSDK.pkg" -target /
        cat ~/.Playdate/config
        echo "root: $PLAYDATE_SDK_PATH"
        PLAYDATE_SDK_PATH="$(grep -E '^\s*SDKRoot' ~/.Playdate/config | head -n 1 | awk '{print $2}')"
        echo "PLAYDATE_SDK_PATH=$PLAYDATE_SDK_PATH" >> $GITHUB_ENV

    - name: install apt dependencies
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt install -y gcc-arm-none-eabi

    - name: download tar.gz
      if: runner.os == 'Linux'
      shell: bash
      run: |
        cd "${{ github.action_path }}"
        curl -L -sS --show-error --fail "https://download.panic.com/playdate_sdk/Linux/PlaydateSDK-${{ inputs.version }}.tar.gz" -o sdk.tar.gz
        mkdir _pd-sdk
        tar -zxf sdk.tar.gz -C _pd-sdk
        cd _pd-sdk/*/
        # TODO: fix permissions:
        # sudo chown runner setup.sh && chmod +x setup.sh
        sudo ./setup.sh || true
        echo "PLAYDATE_SDK_PATH=$PWD" >> $GITHUB_ENV
        echo "$PWD/bin" >> $GITHUB_PATH

    - name: install winget
      if: runner.os == 'Windows'
      shell: powershell
      run: choco install --no-progress winget-cli

    - name: install winget
      if: runner.os == 'Windows' && inputs.version == 'latest'
      shell: powershell
      run: |
        winget settings --enable LocalManifestFiles
        # winget settings --enable ignore-security-hash-argument
        # winget install --silent --accept-source-agreements --disable-interactivity  --manifest .\\winget-latest\\ --force
        winget install --silent --accept-source-agreements --disable-interactivity  --manifest .\\winget-latest

    - name: install winget
      if: runner.os == 'Windows' && inputs.version != 'latest'
      shell: powershell
      run: winget install Panic.PlaydateSDK --silent --accept-source-agreements --disable-interactivity -v ${{ inputs.version }}

    - name: set env
      if: runner.os == 'Windows'
      shell: bash
      run: |
        PLAYDATE_SDK_PATH_lOCAL=$(realpath ~/Documents/PlaydateSDK)
        echo "PLAYDATE_SDK_PATH=$PLAYDATE_SDK_PATH_lOCAL" >> "$GITHUB_ENV"
        echo "$PLAYDATE_SDK_PATH_lOCAL/bin" >> $GITHUB_PATH

    - name: post setup
      id: output
      shell: bash
      run: |
        echo "root=$PLAYDATE_SDK_PATH" >> $GITHUB_OUTPUT
        echo "version=$(cat $PLAYDATE_SDK_PATH/VERSION.txt)" >> $GITHUB_OUTPUT
